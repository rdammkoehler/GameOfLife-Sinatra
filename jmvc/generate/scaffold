if (_args.length == 0) {
	print("Usage: js jmvc/generate/scaffold ClassName Type")
	print("Types (optional): json_rest")
	quit();
}

load('jmvc/rhino/loader.js')
rhinoLoader(function(){
	include.plugins('view','util/generator','lang/inflector');
});

(function(){
	//clear name
	load("jmvc/generate/parts/convert.js")
	var data = $convert(_args[0]);
	

	//create controller stuff
	Generator.createFolder("controllers");
	Generator.renderTo("controllers/" + data.underscore+"_controller.js", "../generate/templates/scaffold/controller.ejs", data);
	//Generator.renderTo("test/functional/" + data.underscore + "_test.js", "../generate/templates/scaffold/functional_test.ejs", data);
	Generator.createFolder("views/" + data.underscore);
	//create views for things
	Generator.renderTo("views/" + data.underscore+"/edit.ejs", "../generate/templates/scaffold/edit.ejs", data);
	Generator.renderTo("views/" + data.underscore+"/init.ejs", "../generate/templates/scaffold/init.ejs", data);
	Generator.renderTo("views/" + data.underscore+"/list.ejs", "../generate/templates/scaffold/list.ejs", data);
	Generator.renderTo("views/" + data.underscore+"/show.ejs", "../generate/templates/scaffold/show.ejs", data);
	//functional test
	Generator.renderTo("test/functional/" + data.underscore+"_controller_test.js", "../generate/templates/scaffold/functional_test.ejs", data);
	
	//model stuff
	$modelName = _args[0];
	$modelType = _args[1];
	load("jmvc/generate/parts/convert.js")
	load("jmvc/generate/parts/model.js")
	
	Generator.postGenerationMessage();
	
})();

/*
var controller_name = MVC.String.pluralize(_args[1])
var data = {
	class_name: controller_name,
	name: MVC.String.classize(controller_name) + 'Controller',
	scaffold: true
};

render_to("controllers/" + controller_name + "_controller.js", "../rhino/command/templates/controller.ejs", data);
render_to("test/functional/" + controller_name + "_controller_test.js", "../rhino/command/templates/controller_test.ejs", data);
create_folder("views/" + controller_name);

data = {
	class_name: _args[1],
	name: MVC.String.classize(_args[1]),
	type: MVC.String.classize(_args[0])
};

render_to("models/" + _args[1] + ".js", "../rhino/command/templates/model.ejs", data);
print_post_generation_message();*/